# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def zigzagLevelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        if not root:
            return[]
            
        level = 0
        mystack = [root]
        tmp = []
        ret = []
        levelret = []
        while mystack:
            node = mystack.pop()
            levelret.append(node.val)
            if level%2:
                if node.right:
                    tmp.append(node.right)
                if node.left:
                    tmp.append(node.left)
            else:
                if node.left:
                    tmp.append(node.left)
                if node.right:
                    tmp.append(node.right)
            
            if not mystack:
                mystack = copy.copy(tmp)
                tmp = []
                level += 1
                ret.append(copy.copy(levelret))
                levelret = []
                
            
        return ret
