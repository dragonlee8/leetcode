class Solution(object):
    result = []
    def helper(self, n, tmp, left, right):
        if right == n:
            self.result.append(tmp)
        if left < n:
            self.helper(n, tmp+'(', left+1, right)
        if right < left:
            self.helper(n, tmp+')', left, right+1)
            
    def generateParenthesis(self, n):
        """
        :type n: int
        :rtype: List[str]
        """
        if not n:
            return self.result
        
        tmp = ''
        self.result = []
        self.helper(n, tmp, 0, 0)
        
        return self.result
            
