class Solution(object):
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """

        maps = {"1": [],
                "2": ["a", "b", "c"],
                "3": ["d", "e", "f"],
                "4": ["g", "h", "i"],
                "5": ["j", "k", "l"],
                "6": ["m", "n", "o"],
                "7": ["p", "q", "r", "s"],
                "8": ["t", "u", "v"],
                "9": ["w", "x", "y", "z"],
                "0": []
                }

        if not digits:
            return []

        result = []
        def helper(digits, tmp):
            if not digits:
                result.append(tmp)
                return

            for x in maps[digits[0]]:
                helper(digits[1:], tmp + x)

        helper(digits, "")
        return result
